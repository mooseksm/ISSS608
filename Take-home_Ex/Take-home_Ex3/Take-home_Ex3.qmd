---
title: "Take-home Exercise 3: Be Weatherwise or Otherwise"
date: "February 9, 2024"
date-modified: "last-modified"
toc: true
execute:
  eval: true
  echo: true
  warning: false
editor: visual
---

## 1. Overview

### 1.1 Background {#background}

![](infographic.jpg){width="636"}

According to an [infographic](https://www.nccs.gov.sg/singapores-climate-action/impact-of-climate-change-in-singapore/) above by the National Climate Change Secretariat Singapore:

1.  Daily mean temperatures are projected to increase by 1.4 to 4.6 degrees celsius; and
2.  The contrast between the wet months (November to January) and dry months (February and June to September) is likely to be more pronounced.

### 1.2 The Task

As a visual analytics greenhorn, I am required to apply my newly acquired visual interactivity and uncertainty methods to validate the claims above.

For this take-home exercise, I have downloaded rainfall records from the [Changi weather station](http://www.weather.gov.sg/home/) as it has the most comprehensive dataset from 1983 to 2023, and will focus on validating [claim 2]{.underline} above, on the pronounced contrast between wet months and dry months.

June and December are my choice of dry and wet months for this analysis.

### 1.3 Designing Tool

The analytical visualisation will be prepared using R and appropriate R packages.

## 2. Set-up

### 2.1 Installing and loading the required libraries

The following code chunk is used to install the necessary R packages:

```{r}
pacman::p_load(tidyverse,ggrepel,ggthemes,hrbrthemes,patchwork,dplyr, gifski, gapminder,plotly,gganimate,ggiraph,magick)
```

### 2.2 Importing the Dataset

I will import and combine the June and December datasets from across the years (1983, 1993, 2003, 2013 and 2023) into two dataframes, *"combined_jun"* and *"combined_dec"*. The code chunk is as follows:

::: panel-tabset
## June records {.unlisted}

```{r}
#| eval: false
jun1983 <- read_csv("data/DAILYDATA_S24_198306.csv",locale=locale(encoding="latin1")
)
jun1993 <- read_csv("data/DAILYDATA_S24_199306.csv",locale=locale(encoding="latin1")
)
jun2003 <- read_csv("data/DAILYDATA_S24_200306.csv",locale=locale(encoding="latin1")
)
jun2013 <- read_csv("data/DAILYDATA_S24_201306.csv",locale=locale(encoding="latin1")
)
jun2023 <- read_csv("data/DAILYDATA_S24_202306.csv",locale=locale(encoding="latin1")
)

combined_jun <- bind_rows(jun1983, jun1993, jun2003, jun2013, jun2023)
```

## Dec records {.unlisted}

```{r}
#| eval: false
dec1983 <- read_csv("data/DAILYDATA_S24_198312.csv",locale=locale(encoding="latin1")
)
dec1993 <- read_csv("data/DAILYDATA_S24_199312.csv",locale=locale(encoding="latin1")
)
dec2003 <- read_csv("data/DAILYDATA_S24_200312.csv",locale=locale(encoding="latin1")
)
dec2013 <- read_csv("data/DAILYDATA_S24_201312.csv",locale=locale(encoding="latin1")
)
dec2023 <- read_csv("data/DAILYDATA_S24_202312.csv",locale=locale(encoding="latin1")
)

combined_dec <- bind_rows(dec1983, dec1993, dec2003, dec2013, dec2023)
```
:::

::: callout-note
The following error is shown if just "read_csv" function is used:

*Error in nchar(x, "width") : invalid multibyte string, element 1*

There is hence a need to add "locale=locale(encoding="latin1")" within the "read_csv" function
:::

## 3. Overarching Design Idea

Before we go into data wrangling, analysis and visualisation, we first develop a plan on how we would want to validate the claim:

*The contrast between the wet months (November to January) and dry months (February and June to September) is likely to be more pronounced.*

The above means that dry months are likely to get drier and wet months are likely to get wetter.

Rainfall in these months could be considered in two ways, (i) Volume of rain and (ii) Frequency i.e. Days of rain.

My rough design ideas were as follows:

![](images/clipboard-3074620766.png){width="344"}

## 4. Data Wrangling

### 4.1 Filtering variables in the dataset

As we are only interested in rainfall data, we will just retain the first 5 variables in the *"combined_jun"* and *"combined_dec"* dataframes - "Station", "Year", "Month", "Day", "Daily Rainfall Total (mm)".

```{r}
#| eval: false
jun_rainfall <- combined_jun %>% select(1:5)
dec_rainfall <- combined_dec %>% select(1:5)
```

### 4.2 Saving as new datafiles

We will then save the *"jun_rainfall"* and *"dec_rainfall"* as new datafiles for further visualisation/analysis steps:

::: panel-tabset
## Saving new files {.unlisted}

```{r}
#| eval: false
write_csv(jun_rainfall, "data/jun_rainfall.csv")
write_csv(dec_rainfall, "data/dec_rainfall.csv")
```

## Checking new files {.unlisted}

This step checks that the new datafiles have been saved correctly:

```{r}
jun_rainfall <- read_csv("data/jun_rainfall.csv")
dec_rainfall <- read_csv("data/dec_rainfall.csv")
```
:::

### 4.3 Checking for missing values

We check for the presence of missing values by using the following code chunk:

```{r}
paste("There are",sum(is.na(jun_rainfall)),"missing values for Jun Rainfall dataset.")
paste("There are",sum(is.na(dec_rainfall)),"missing values for Dec Rainfall dataset.")
```

### 4.4 Converting selected variables to factors

For ease of different methods of visualisation downstream in the process, we will convert the "Year" and "Month" variables into integer data type as well as factors. The integer version will be named as "Year_num" and "Month_num" respectively.

```{r}
variables <- c('Year', 'Month')
num_variables <- c('Year_num','Month_num')

jun_rainfall[num_variables] <- lapply(jun_rainfall[variables],as.integer)

dec_rainfall[num_variables] <- lapply(dec_rainfall[variables],as.integer)

jun_rainfall[variables] <- lapply(jun_rainfall[variables],factor)

dec_rainfall[variables] <- lapply(dec_rainfall[variables],factor)
```

### 4.5 Creation of new variables "number_of_days_rain" and "percent_days_rain"

We will create new variables "number_of_days_rain" and "percent_days_rain" that calculates the number of days for which there is rain (more than 0 mm) and further divides by the total number of days in the month (30 days in Jun and 31 days in Dec) to form a percentage.

```{r}
jun_rainfall <- jun_rainfall %>%
  group_by(Year) %>%
  mutate(number_of_days_rain = sum(`Daily Rainfall Total (mm)` != 0),
         percent_days_rain = number_of_days_rain / 30 * 100)

dec_rainfall <- dec_rainfall %>%
  group_by(Year) %>%
  mutate(number_of_days_rain = sum(`Daily Rainfall Total (mm)` != 0),
         percent_days_rain = number_of_days_rain / 31 * 100)
```

### 4.6 Creation of summarised dataset for total monthly rainfall volume, frequency and distribution

We then create new datasets *"combined_summed"*, *"combined_freq"* and *"combined_detailed".*

*"combined_summed"* dataset contains the variables "Year", "Month" and "monthly_rainfall" obtained by summarising the total daily rainfall in Jun and Dec for the respective years in *"jun_rainfall"* and *"dec_rainfall"* datasets. It will be used for analysis of volume of rainfall.

*"combined_freq"* dataset contains contains the variables "Year", "Month", "number_of_days_rain" and "percent_days_rain". It will be used for analysis of frequency of rainfall.

*"combined_detailed"* dataset contains contains the variables "Year", "Month", "Day" and "Daily Rainfall Total (mm)". It will be used for analysis of detailed daily distribution of rainfall.

::: panel-tabset
## "combined_summed" - for volume of rainfall {.unlisted}

```{r}
jun_rainfall_summed <- jun_rainfall %>%
  group_by(Year,Month) %>%
  summarise(`monthly_rainfall` = sum(`Daily Rainfall Total (mm)`))

dec_rainfall_summed <- dec_rainfall %>%
  group_by(Year,Month) %>%
  summarise(`monthly_rainfall` = sum(`Daily Rainfall Total (mm)`))

combined_summed <- bind_rows(jun_rainfall_summed,dec_rainfall_summed) %>%
  mutate(Month=recode(Month,
                      "6"="Jun",
                      "12"="Dec"))

combined_summed
```

## "combined_freq" - for frequency of rainfall {.unlisted}

```{r}
jun_rainfall_freq <- jun_rainfall %>%
  group_by(Year_num,Month) %>%
  select(number_of_days_rain,percent_days_rain) %>%
  distinct()

dec_rainfall_freq <- dec_rainfall %>%
  group_by(Year_num,Month) %>%
  select(number_of_days_rain,percent_days_rain) %>%
  distinct()

combined_freq <- bind_rows(jun_rainfall_freq,dec_rainfall_freq %>% select(-Year_num)) %>%
  mutate(Month=recode(Month,
                      "6"="Jun",
                      "12"="Dec"))

combined_freq
```

## "combined_detailed" - for detailed daily distribution of rainfall {.unlisted}

```{r}
jun_rainfall_detailed <- jun_rainfall %>%
  select(Year, Month, Day,`Daily Rainfall Total (mm)`)

dec_rainfall_detailed <- dec_rainfall %>%
  select(Year, Month, Day,`Daily Rainfall Total (mm)`)

combined_detailed <- bind_rows(jun_rainfall_detailed,dec_rainfall_detailed) %>% 
  mutate(Month=recode(Month,
                      "6"="Jun",
                      "12"="Dec"))

combined_detailed
```
:::

## 5. Data Exploration and Visualisation

### 5.1 Difference in overall distribution of daily rainfall between Jun and Dec over the years 1983 to 2023 (at 10-year intervals)

June and December were chosen as the dry and wet months for this analysis, based on what had been described in the claim.

Based on the analysis of the overall distribution of daily rainfall within both months over the years 1983, 1993, 2003, 2013 and 2023, we can observe that June is indeed a drier month as compared to December.

The median daily rainfall volume for June is 0 mm while the median daily rainfall volume for Dec is 1.4 mm. The maximum daily rainfall volume for June is 51.60 mm while the maximum daily rainfall volume for Dec is much higher at 164.40 mm.

::: {.callout-note appearance="minimal" collapse="true" icon="false"}
## Show the code

```{r,fig.height=5,fig.width=5}
#| eval: false
jun_rainfall_ss <- ggplot(jun_rainfall, 
                          aes(x = 1,
                              y = `Daily Rainfall Total (mm)`)) +
  geom_boxplot()+
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank())+
  ylim(0,170)+
  ggtitle("June Rainfall")

dec_rainfall_ss <- ggplot(dec_rainfall, 
                          aes(x = 1,
                              y = `Daily Rainfall Total (mm)`)) +
  geom_boxplot()+
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank())+
  ylim(0,170)+
  ggtitle("Dec Rainfall")

annotations = list( 
  list( 
    x = 0.2,  
    y = 1.0,  
    text = "Jun Rainfall",  
    xref = "paper",  
    yref = "paper",  
    xanchor = "center",  
    yanchor = "bottom",  
    showarrow = FALSE 
  ),  
  list( 
    x = 0.8,  
    y = 1,  
    text = "Dec Rainfall",  
    xref = "paper",  
    yref = "paper",  
    xanchor = "center",  
    yanchor = "bottom",  
    showarrow = FALSE 
  ))

subplot(ggplotly(jun_rainfall_ss),
        ggplotly(dec_rainfall_ss)) %>%
  layout(title = 'Distribution of Total Daily Rainfall (mm)',
         annotations = annotations)
```
:::

```{r,fig.height=5,fig.width=5,echo=FALSE}
jun_rainfall_ss <- ggplot(jun_rainfall, 
                          aes(x = 1,
                              y = `Daily Rainfall Total (mm)`)) +
  geom_boxplot()+
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank())+
  ylim(0,170)+
  ggtitle("June Rainfall")

dec_rainfall_ss <- ggplot(dec_rainfall, 
                          aes(x = 1,
                              y = `Daily Rainfall Total (mm)`)) +
  geom_boxplot()+
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank())+
  ylim(0,170)+
  ggtitle("Dec Rainfall")

annotations = list( 
  list( 
    x = 0.2,  
    y = 1.0,  
    text = "Jun Rainfall",  
    xref = "paper",  
    yref = "paper",  
    xanchor = "center",  
    yanchor = "bottom",  
    showarrow = FALSE 
  ),  
  list( 
    x = 0.8,  
    y = 1,  
    text = "Dec Rainfall",  
    xref = "paper",  
    yref = "paper",  
    xanchor = "center",  
    yanchor = "bottom",  
    showarrow = FALSE 
  ))

subplot(ggplotly(jun_rainfall_ss),
        ggplotly(dec_rainfall_ss)) %>%
  layout(title = 'Distribution of Total Daily Rainfall (mm)',
         annotations = annotations)
```

### 5.2 Analysis of total volume of rainfall in Jun and Dec by year

We start validating [claim 2](#background) by analysing the total volume of rainfall in the months of June and December for each year between the period of 1983 to 2023 (every 10-year interval), to determine whether the level of rainfall experienced between the dry and wet month are becoming more different or similar over time.

We will plot a grouped bar chart using *combined_summed* dataset, adding interactivity using tooltip.

::: {.callout-note appearance="minimal" collapse="true" icon="false"}
## Show the code

```{r}
#| eval: false
p1 <- ggplot(combined_summed,
       aes(fill=Month,
           y=monthly_rainfall,
           x=Year)) + 
    geom_bar(position="dodge", stat="identity")+
  labs(
    title="Total Rainfall for the Jun and Dec from 1983 to 2023 (at 10-year intervals)",
    y="Total Rainfall (mm)")

p1 <- ggplotly(p1, tooltip="all")

p1
```
:::

```{r,echo=FALSE}
p1 <- ggplot(combined_summed,
       aes(fill=Month,
           y=monthly_rainfall,
           x=Year)) + 
    geom_bar(position="dodge", stat="identity")+
  labs(
    title="Total Rainfall for the Jun and Dec from 1983 to 2023 (at 10-year intervals)",
    y="Total Rainfall (mm)")

p1 <- ggplotly(p1, tooltip="all")

p1
```

As observed, the total volume of rainfall in Jun seems to be on an [upward]{.underline} trend over the years while the total volume of rainfall in Dec seems to be on a [downward]{.underline} trend (with the exception of 2013). This seems to show that the difference in the dry month June and wet month Dec is getting **less pronounced** over the years. A comparison between the other dry and wet months will have to be studied to ascertain this observation.

### 5.3 Analysis of detailed distribution of daily rainfall within the month, by year

We then study the detailed distribution of daily rainfall within the months of June and December for all the years from 1983 to 2023 (at 10-year intervals).

As plotting graphs for all years into one plot would be confusing, we included a play/pause button and a slider to allow users to view the graphs for June and December for each year at a time.

::: {.callout-note appearance="minimal" collapse="true" icon="false"}
## Show the code

```{r}
#| eval: false
p2 <- ggplot(combined_detailed, aes(x = Day, 
                                      y = `Daily Rainfall Total (mm)`, 
                                      group = Year, 
                                      color = Month,
                                      frame = Year)) +
  geom_line() +
  labs(title = "Daily Rainfall Distribution within each month by Year",
       x = "Day",
       y = "Daily Rainfall") +
  scale_x_continuous(breaks = c(0, 5, 10, 15, 20, 25, 30))+
  theme_minimal() +
  facet_wrap(~Month, scales = "free_x", ncol = 1)+
  theme(panel.spacing = unit(3, "lines"))

ggplotly(p2)
```
:::

```{r,echo=FALSE}
p2 <- ggplot(combined_detailed, aes(x = Day, 
                                      y = `Daily Rainfall Total (mm)`, 
                                      group = Year, 
                                      color = Month,
                                      frame = Year)) +
  geom_line() +
  labs(title = "Daily Rainfall Distribution within each month by Year",
       x = "Day",
       y = "Daily Rainfall") +
  scale_x_continuous(breaks = c(0, 5, 10, 15, 20, 25, 30))+
  theme_minimal() +
  facet_wrap(~Month, scales = "free_x", ncol = 1)+
  theme(panel.spacing = unit(3, "lines"))

ggplotly(p2)
```

As seen from the plot above, for the years 1983 to 2013, the distribution of rainfall in Dec was different from that in June - there were either a greater number of peaks and/or peaks with higher intensities of daily rainfall within the month of Dec as compared to June - **however in 2023, the difference in the daily rainfall distribution between June and December was not pronounced as June and December seemed to have a more similar daily rainfall distribution.**

### 5.4 Analysis of frequency of rainfall in Jun and Dec over the years

We then analyse the frequency of rainfall i.e. how often it rains.

#### 5.4.1 Percentage of rainy days

We utilise the *"combined_freq"* dataset to study the percentage of rainy days in June and December across the 5 years (1983, 1993, 2003, 2013, 2003), to determine if they were more similar or different over time. Interactivity is included in the plot below using tooltip.

::: {.callout-note appearance="minimal" collapse="true" icon="false"}
## Show the code

```{r}
#| eval: false
p3 <- ggplot(combined_freq, aes(x = Year_num, 
                          y = percent_days_rain,
                          color = Month))+
  geom_point(alpha=0.7,size=3)+
  geom_smooth(method="loess",se=FALSE)+
  labs(title = "Percentage of rainy days in Jun and Dec from 1983 to 2023 (at 10-year intervals)",
       x = "Year",
       y = "Percentage") +
  scale_x_continuous(limits = c(1983, 2023),breaks = c(1983, 1993, 2003, 2013, 2023))+
  theme_minimal()

p3 <- ggplotly(p3, tooltip="all")

p3
```
:::

```{r,echo=FALSE}
p3 <- ggplot(combined_freq, aes(x = Year_num, 
                          y = percent_days_rain,
                          color = Month))+
  geom_point(alpha=0.7,size=3)+
  geom_smooth(method="loess",se=FALSE)+
  labs(title = "Percentage of rainy days in Jun and Dec from 1983 to 2023 (at 10-year intervals)",
       x = "Year",
       y = "Percentage") +
  scale_x_continuous(limits = c(1983, 2023),breaks = c(1983, 1993, 2003, 2013, 2023))+
  theme_minimal()

p3 <- ggplotly(p3, tooltip="all")

p3
```

Based on the above plot, the percentage of rainfall in December is generally higher than June across all the years. However, it seems like the percentage of rainy days in June is on an upward trend from 2003 to 2023. **This could mean that the difference in percentage of rainy days between June and December could become less pronounced over time.**

#### 5.4.2 Frequency of different levels of daily total rainfall

We also analyse the frequency of different levels of daily total rainfall to understand whether rainfall intensities between June and December were more similar or different over the years. For interactivity, we utilise [`transition_time()`](https://gganimate.com/reference/transition_time.html) of **gganimate** to create transition through distinct states in time (i.e. Year).

The code chunk are as follows:

::: panel-tabset
## Jun Rainfall {.unlisted}

```{r}
p4 <- ggplot(jun_rainfall, aes(x = `Daily Rainfall Total (mm)`)) +
  geom_histogram(binwidth = 10, fill = "tomato", color = "black", alpha = 0.7) +
  labs(title = "Rainfall Frequency in Jun, Year: {frame_time}",
       x = "Daily Total Rainfall (mm)",
       y = "Frequency") +
  scale_x_continuous(breaks = seq(0, max(jun_rainfall$`Daily Rainfall Total (mm)`) + 10, by = 10))+
  transition_time(Year_num) +       
  ease_aes('linear')+
  theme_minimal()

p4_gif <- animate(p4, width = 650, height = 400)
```

## Dec Rainfall {.unlisted}

```{r}
p5 <- ggplot(dec_rainfall, aes(x = `Daily Rainfall Total (mm)`)) +
  geom_histogram(binwidth = 10, fill = "lightseagreen", color = "black", alpha = 0.7) +
  labs(title = "Rainfall Frequency in Dec, Year: {frame_time}",
       x = "Daily Total Rainfall (mm)",
       y = "Frequency") +
  scale_x_continuous(breaks = seq(0, max(dec_rainfall$`Daily Rainfall Total (mm)`) + 10, by = 10)) +
  transition_time(Year_num) +       
  ease_aes('linear')+
  theme_minimal()

p5_gif <- animate(p5, width =650, height = 400)

```
:::

We then combine the gifs together to form a new gif:

::: {.callout-note appearance="minimal" collapse="true" icon="false"}
## Show the code

```{r}
#| eval: false
p4_mgif <- image_read(p4_gif)
p5_mgif <- image_read(p5_gif)

new_gif <- image_append(c(p4_mgif[1], p5_mgif[1]),stack = TRUE)

for(i in 2:93){
  combined <- image_append(c(p4_mgif[i], p5_mgif[i+6]), stack = TRUE)
  new_gif <- c(new_gif, combined)
}

new_gif
```
:::

```{r,echo=FALSE}
p4_mgif <- image_read(p4_gif)
p5_mgif <- image_read(p5_gif)

new_gif <- image_append(c(p4_mgif[1], p5_mgif[1]),stack = TRUE)

for(i in 2:93){
  combined <- image_append(c(p4_mgif[i], p5_mgif[i+6]), stack = TRUE)
  new_gif <- c(new_gif, combined)
}

new_gif
```

We observed more days with heavier rainfalls in June over the years. After around 2013, days with 40 mm and 50 mm of rain increased in frequency. **While this is of a smaller volume than Dec, it seems like June is getting increasingly intense rainfall which could make it more similar to Dec.**

Rainfall intensity in December increased over the years but is highly varied. In the late 2000s to mid 2010s, we observed a higher frequency of days with higher rainfall levels of 60 mm, 70 mm and 120 mm, however towards 2023, days with rainfall tend to be in the rainfall levels of 60 mm or less. **As there does not seem to be a stark/significant increase in the intensity of the rainfall in Dec, the increase in rainfall intensity observed for Jun could make the contrast between both months less pronounced over the years.**

## 6. Overall evaluation

Based on the above observations, it does not appear that the difference between dry month June and wet month December will become more pronounced. **As rainfall in June intensifies in volume and in frequency, its contrast with December seems to be less which conflicts with [claim 2](#0) that *The contrast between the wet months (November to January) and dry months (February and June to September) is likely to be more pronounced.***

However, it is also important to note the limitations of the above analysis:

-   it was carried out based on data from a single weather station, Changi weather station

-   it was based on just one dry (June) and one wet month (Dec) of the year

-   only 5 years of data was studied - 1983, 1993, 2003, 2013 and 2023

Hence more in-depth analysis utilising (i) data from more weather stations, to more comprehensively cover the areas in Singapore, (ii) data from more dry and wet months, as well as (iii) more years of data for a more accurate and comprehensive study will need to be carried out.

## 7. References

-   h[ttps://www.weather.gov.sg/home](https://r4va.netlify.app/)

-   <https://r4va.netlify.app/>

-   <https://stackoverflow.com/questions/58897286/slider-for-plotly-r>

-   [r](https://stackoverflow.com/questions/58897286/slider-for-plotly-r)<https://stackoverflow.com/questions/3681647/ggplot-how-to-increase-spacing-between-faceted-plots>
