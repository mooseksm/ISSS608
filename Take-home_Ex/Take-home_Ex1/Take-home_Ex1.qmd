---
title: "Take-home Exercise 1: Creating data visualisation beyond default"
date: "January 13, 2024"
date-modified: "last-modified"
toc: true
execute:
  eval: true
  echo: true
  warning: false
editor: visual
---
# 1. Overview

## 1.1 Background: Setting the Scene

[Organisation for Economic Co-operation and Development](https://www.oecd.org/) (OECD) education director Andreas Schleicher shared in a 2016 [BBC article](https://www.bbc.com/news/education-38212070) that:

***“Singapore managed to achieve excellence without wide differences between children from wealthy and disadvantaged families.”***

This sentiment echoes the Singapore Government's commitment in ensuring that ***"Every School a Good School"***, a slogan popularised by Mr Heng Swee Keat during his stint as Singapore’s Minister for Education from 2011 to 2015.

The general public, however, strongly believe that disparities still exist, between elite schools and neighborhood schools, between students from families from different socioeconomic statuses, and between immigrants and non-immigrants.

## 1.2 The Task

The [2022 Programme for International Student Assessment (PISA) data](https://www.oecd.org/pisa/data/2022database/) was released on December 5, 2022. OECD runs the PISA global education survey every three years to assess education systems worldwide through testing 15 year old students in the subjects of mathematics, reading, and science. It aims to measure how well 15-year-old students approaching the end of compulsory schooling are prepared to meet the challenges of today’s knowledge societies.

In this take-home exercise, I will utilise **Exploratory Data Analysis (EDA)** methods and [**ggplot2**](https://ggplot2.tidyverse.org/) functions to reveal:

-   the distribution of Singapore students’ performance in mathematics, reading, and science, and

-   the relationship between these performances with schools, gender and socioeconomic status of the students.

## 1.3 About the data

The [PISA 2022 database](https://www.oecd.org/pisa/data/2022database/) contains the full set of responses from individual students, school principals and parents. There are a total of five data files and their contents are as follows:

-   Student questionnaire data file

-   School questionnaire data file

-   Teacher questionnaire data file

-   Cognitive item data file

-   Questionnaire timing data file

These data files are in SAS and SPSS formats. For the purpose of this assignment, I will be using only the **Student questionnaire data file**.

More information on the PISA 2022 survey can be found in the [PISA 2022 Technical Report](https://www.oecd.org/pisa/data/pisa2022technicalreport/).

## 1.4 Designing Tool

The data will be processed by using appropriate **tidyverse** family of packages and statistical graphics will be prepared using **ggplot2** and its extensions.

# 2. Set-up

## 2.1 Loading R packages

In this take-home exercise, the following R packages will be used. They are:

-   [tidyverse](https://www.tidyverse.org/)
-   [haven](https://haven.tidyverse.org/)
-   [ggrepel](https://ggrepel.slowkow.com/)
-   [ggthemes](https://ggplot2.tidyverse.org/reference/ggtheme.html)
-   [hrbrthemes](https://www.rdocumentation.org/packages/hrbrthemes/versions/0.8.0/topics/hrbrthemes)
-   [patchwork](https://patchwork.data-imaginist.com/)
-   [intsvy](https://cran.r-project.org/web/packages/intsvy/intsvy.pdf)
-   [ggdist](https://cran.r-project.org/web/packages/ggdist/ggdist.pdf)
-   [ggridges](https://cran.r-project.org/web/packages/ggridges/ggridges.pdf)
-   [colorspace](https://cran.r-project.org/web/packages/colorspace/vignettes/colorspace.html)

The code chunk used is as follows:

```{r}
pacman::p_load(tidyverse, haven, ggrepel, ggthemes, hrbrthemes, patchwork, intsvy, ggdist, ggridges,colorspace)
```

::: callout-tip
Writing code chunks in this way allows entire code to be run section by section, and will hence be easier to control. The use of the function [pacman::](https://www.geeksforgeeks.org/pacman-package-in-r/) is meant to launch/call the package before the syntax is written.
:::

## 2.2 Importing the PISA dataset

The code chunk below uses [`read_sas()`](https://haven.tidyverse.org/reference/read_sas.html) of [haven](https://haven.tidyverse.org/) to import PISA data into R environment.

```{r}
#| eval: false
stu_qqq <- 
  read_sas("data/cy08msp_stu_qqq.sas7bdat")
```

### 2.2.1 Filtering data to obtain SG data

As the intent is to study the performances of Singaporean students. we will filter the dataset by country code CNT == "SGP" for which SGP represents Singapore. The code chunk is as follows:

```{r}
#| eval: false
stu_qqq_SG <- stu_qqq %>%
  filter(CNT == "SGP")
```

### 2.2.2 Saving the filtered data as a new file

To avoid rerunning the above steps every time we analyse the data or when loading the webpage, we will save the filtered SGP data as a new file and utilize this file for further analysis. The code chunk is as follows:

```{r}
#| eval: false
write_rds(stu_qqq_SG,
          "data/stu_qqq_SG.rds")
```

### 2.2.3 Calling the file to check if it has been saved correctly

This step helps to ensure that the new file has been saved correctly - before running the code, clear objects from the Environment workspace and run the code chunk below to observe if the data "stu_qqq_SG" appears.

```{r}
stu_qqq_SG <- 
  read_rds("data/stu_qqq_SG.rds")
```

# 3 Data Wrangling

## 3.1 Overview of data

Before we go into detailed analysis, we first conduct an overview of the data. Here, we utilise the glimpse, str and summary function.

::: {.callout-note collapse="true" icon="false" appearance="minimal"}
## Glimpse {.unlisted}

There are a total of 6606 rows and 1279 columns.

```{r}
dplyr::glimpse(stu_qqq_SG)
```
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
## Data type of columns {.unlisted}

```{r}
str(stu_qqq_SG)
```
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
## Summary statistics {.unlisted}

```{r}
summary(stu_qqq_SG)
```
:::

## 3.2 Checking for duplicate data

We then check for duplicate data and the code chunk is as follows:

```{r}
paste("There are",sum(duplicated(stu_qqq_SG)),"duplicated student records.")
```

## 3.3 Checking for missing data

Given the focus on the performance of students in maths, science and reading, and the relationship of these performances with schools, gender and socioeconomic status, our analysis will focus on the following columns:

-   [School ID]{.underline}: "CNTSCHID"

-   [Student ID]{.underline}:"CNTSTUID"

-   [Gender]{.underline}:"ST004D01T"

-   [Plausible Values for Math]{.underline}: "PV1MATH" to "PV10MATH"

-   [Plausible Values for Reading]{.underline}: "PV1READ" to "PV10READ"

-   [Plausible Values for Science]{.underline}: "PV1SCIE" to "PV10SCIE"

-   [Key variable related to socioeconomic status]{.underline}: "ESCS" which is the index of economic, social and cultural status

The following code chunk serves to check the above columns for missing values:

```{r}
columns_to_check <- c("CNTSCHID", "CNTSTUID", "ST004D01T","PV1MATH","PV2MATH","PV3MATH","PV4MATH","PV5MATH","PV6MATH","PV7MATH","PV8MATH","PV9MATH","PV10MATH","PV1READ","PV2READ","PV3READ","PV4READ","PV5READ","PV6READ","PV7READ","PV8READ","PV9READ","PV10READ","PV1SCIE","PV2SCIE","PV3SCIE","PV4SCIE","PV5SCIE","PV6SCIE","PV7SCIE","PV8SCIE","PV9SCIE","PV10SCIE","ESCS")
check_missing_data <- stu_qqq_SG[, columns_to_check]
missing_values <- apply(is.na(check_missing_data), 2, any)
missing_values
```

The results show that there are missing values for "ESCS". The code chunk below is used to determine the number of missing values:

```{r}
paste("There are",sum(is.na(stu_qqq_SG$ESCS)),"missing values for ESCS.")
```

Results show that there are 47 missing values for ESCS. As this makes up less than 1% of the dataset, the rows with missing values for ESCS were removed before further analysis.

The code chunk below removes rows with missing values for "ESCS":

```{r}
stu_qqq_SG_clean <- stu_qqq_SG[complete.cases(stu_qqq_SG[, "ESCS"]), ]
```

## 3.4 Converting data type for CNTSCHID and CNTSTUID

Based on the analysis of the data type of columns above, it was noted that CNTSCHID and CNTSTUID are stated as numeric data types. CNTSCHID and CNTSTUID are considered categorical data and we will change their data type to character. The code chunk is as follows:

```{r}
stu_qqq_SG_clean$CNTSCHID <- as.character(stu_qqq_SG_clean$CNTSCHID)
stu_qqq_SG_clean$CNTSTUID <- as.character(stu_qqq_SG_clean$CNTSTUID)
```

We will then double check by running the str function again:

```{r}
str(stu_qqq_SG_clean[,c("CNTSCHID","CNTSTUID")])
```

## 3.5 Binning variable ESCS

Based on the analysis of the data type of columns, ESCS - the index of economic, social and cultural status - is indicated as a numeric data type. Based on the [Code Book](https://webfs.oecd.org/pisa2022/CY08MSP_CODEBOOK_5thDecember23.xlsx) provided by OECD, ESCS ranges from -6.84 to 7.38 within the dataset. A more negative number represents a lower economic, social and cultural status.

We will bin the ESCS variable into quantiles using the [mutate()](https://dplyr.tidyverse.org/reference/mutate.html) and [cut()](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/cut) function, and the code chunk is as follows:

```{r}
stu_qqq_SG_clean <- stu_qqq_SG_clean %>%
  mutate(ESCS_recoded = cut(ESCS,breaks=quantile(ESCS,c(0,0.25,0.5,0.75,1)),labels=c("Very Low","Low","Medium","High"),include.lowest=TRUE))
```

We will double check that the variable ESCS_recoded has been successfully created:

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
### Checking for ESCS recoded variable {.unlisted}

```{r}
stu_qqq_SG_clean$ESCS_recoded
```
:::

## 3.6 Recoding ST004D01T (Gender) variable

Gender is represented by variable ST004D01T, with 1 representing Female and 2 representing Male. For more intuitive representation in further analysis, we will recode the labels to "Female" and "Male" respectively.

The code chunk is as follows:

```{r}
stu_qqq_SG_clean$ST004D01T <- recode(stu_qqq_SG_clean$ST004D01T, "1" = "Female", "2" = "Male")
```

# 4 Exploratory Data Analysis

## 4.1 General distribution of students' performance in Math, Science and Reading

There are ten plausible values for Math, Reading and Science for each student. Using the [pisa.mean.pv](https://www.rdocumentation.org/packages/intsvy/versions/2.8/topics/pisa.mean.pv) function from [intsvy](https://daniel-caro.com/r-intsvy) package, we will generate the Mean and Standard Deviation of PV values from "PV1MATH" to "PV10MATH", "PV1READ" to "PV10READ" and "PV1SCIE" to "PV10SCIE" for the population of students that took the PISA assessment.

We will first create a data folder path to save any data files we generate:

```{r}
data_folder_path <- file.path(getwd(), "data")
```

::: {.callout-note}
Please note that the author has indicated export=FALSE for the code chunks below for the purpose of uploading onto github. Locally, the author utilised export=TRUE to generate data files for reference.
:::

We will then utilise the following code chunk to determine the Mean and Standard Deviation of PV values across the population of students that took the assessment, and merge the values via a [rbind()](https://dplyr.tidyverse.org/reference/bind.html) function (with a [relocate()](https://dplyr.tidyverse.org/reference/relocate.html) function to bring the newly formed "subject" column to the front of the dataframe) to form a table indicating the Mean and Standard Deviation of PV values per subject:

```{r}
pvmathgeneral <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"MATH"), data=stu_qqq_SG_clean,export=FALSE,name="pvmath_general",folder=data_folder_path)

pvmathgeneral$subject <- "Math"

pvreadgeneral <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"READ"), data=stu_qqq_SG_clean,export=FALSE,name="pvread_general",folder=data_folder_path)

pvreadgeneral$subject <- "Reading"

pvsciegeneral <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"SCIE"), data=stu_qqq_SG_clean,export=FALSE,name="pvscie_general",folder=data_folder_path)

pvsciegeneral$subject <- "Science"

mergedgeneral <- rbind(pvmathgeneral,pvreadgeneral,pvsciegeneral)
mergedgeneral %>% relocate(subject)
```

We then generate the graphical representation of the general distribution of Math, Reading and Science scores:

```{r,fig.width=10, fig.height=5}
p1<- ggplot(mergedgeneral, aes(x = subject, y = Mean,colour=subject)) +
  geom_boxplot(width = 0.5, position = position_dodge(width = 0.75),lwd=0.5,show.legend=FALSE) +
  stat_summary(
    fun = mean,
    geom = "point",
    shape = 18,
    size = 5,
    aes(colour=subject),
    position = position_dodge(width = 0.75)) +
  geom_errorbar(
    aes(ymin = Mean - SD, ymax = Mean + SD),
    width = 0.5,
    size=0.8,
    position = position_dodge(width = 0.5)
  ) +
  labs(title = "Scores across Math, Reading and Science across all 15-year olds who took PISA 2022 in SGP") +
  ylab("Scores") +
  xlab("Subject")+
  scale_y_continuous(limits = c(0, 1000), breaks = seq(0, 1000, by = 50))+
  coord_flip() +
  theme_minimal(base_size = 12)
p1
```

Based on the plot above, in general, 15-year olds in Singapore performed best in Math, followed by Science and lastly Reading.

\[21 words\]

## 4.2 Distribution of students' performance in Math, Science and Reading across school {#sec-4.2}

We dive deeper into the students' performance at the school level. Likewise using the [pisa.mean.pv](https://www.rdocumentation.org/packages/intsvy/versions/2.8/topics/pisa.mean.pv) function from [intsvy](https://daniel-caro.com/r-intsvy) package, we obtain the Mean and Standard Deviation of PV values from "PV1MATH" to "PV10MATH", "PV1READ" to "PV10READ" and "PV1SCIE" to "PV10SCIE" for each school.

The code chunk to generate the composite PV values is as follows:

```{r}
pvmathsch <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"MATH"),by= "CNTSCHID", data=stu_qqq_SG_clean,export=FALSE,name="pvmath_bysch",folder=data_folder_path)

pvreadsch <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"READ"),by= "CNTSCHID", data=stu_qqq_SG_clean,export=FALSE,name="pvread_bysch",folder=data_folder_path)

pvsciesch <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"SCIE"),by= "CNTSCHID", data=stu_qqq_SG_clean,export=FALSE,name="pvscie_bysch",folder=data_folder_path)
```

We then generate individual plots to display the distribution of Math, Reading and Science scores across schools.

The code chunks are as follows:

::: panel-tabset
## Math {.unlisted}

```{r,fig.width=5, fig.height=20}
p2<- ggplot(pvmathsch, aes(x = as.factor(CNTSCHID), y = Mean)) +
  geom_boxplot(width = 0.5, position = position_dodge(width = 0.75),lwd=1.5) +
  stat_summary(
    fun = mean,
    geom = "point",
    shape = 18,
    size = 5,
    position = position_dodge(width = 0.75),
    color = "red"
  ) +
  geom_errorbar(
    aes(ymin = Mean - SD, ymax = Mean + SD),
    width = 0.8,
    size=1,
    position = position_dodge(width = 10)
  ) +
  labs(title = "Math Scores by School") +
  ylab("Math Score") +
  xlab("School ID")+
  scale_y_continuous(limits=c(0,1000),breaks = seq(0, 1000, by=100))+
  coord_flip() +
  theme_minimal(base_size=20)             
```

## Reading

```{r,fig.width=5, fig.height=20}
p3<- ggplot(pvreadsch, aes(x = as.factor(CNTSCHID), y = Mean)) +
  geom_boxplot(width = 0.5, position = position_dodge(width = 0.75),lwd=1.5) +
  stat_summary(
    fun = mean,
    geom = "point",
    shape = 18,
    size = 5,
    position = position_dodge(width = 0.75),
    color = "cadetblue2"
  ) +
  geom_errorbar(
    aes(ymin = Mean - SD, ymax = Mean + SD),
    width = 0.8,
    size=1,
    position = position_dodge(width = 10)
  ) +
  labs(title = "Reading Scores by School") +
  ylab("Reading Score") +
  xlab("School ID")+
  scale_y_continuous(limits=c(0,1000),breaks = seq(0, 1000, by=100))+
  coord_flip() +
  theme_minimal(base_size=20)             
```

## Science

```{r,fig.width=5, fig.height=20}
p4<- ggplot(pvsciesch, aes(x = as.factor(CNTSCHID), y = Mean)) +
  geom_boxplot(width = 0.5, position = position_dodge(width = 0.75),lwd=1.5) +
  stat_summary(
    fun = mean,
    geom = "point",
    shape = 18,
    size = 5,
    position = position_dodge(width = 0.75),
    color = "orange"
  ) +
  geom_errorbar(
    aes(ymin = Mean - SD, ymax = Mean + SD),
    width = 0.8,
    size=1,
    position = position_dodge(width = 10)
  ) +
  labs(title = "Science Scores by School") +
  ylab("Science Score") +
  xlab("School ID")+
  scale_y_continuous(limits=c(0,1000),breaks = seq(0, 1000, by=100))+
  coord_flip() +
  theme_minimal(base_size=20)             
```
:::

We then plot all three plots together using patchwork() for better visualisation of the overall performance of schools:

```{r,fig.width=25, fig.height=40}
(p2|p3|p4)+plot_annotation(tag_levels = 'I')
```

The above plot indicates that the majority of schools exhibit similar performance across all three segments, with most having PV scores ranging from 400 to 700 in Math, Reading, and Science. Notably, certain schools consistently underperform or outperform their counterparts in all three segments. For example, schools with IDs 70200149 and 70200115 consistently showed lower scores in Math, Reading, and Science compared to other schools. Conversely, schools with IDs 70200001 and 70200002 consistently performed better in all three segments.

\[79 words\]

## 4.3 Distribution of students' performance in Math, Science and Reading by gender {#sec-4.3}

As the above, we also use the [pisa.mean.pv](https://www.rdocumentation.org/packages/intsvy/versions/2.8/topics/pisa.mean.pv) function from [intsvy](https://daniel-caro.com/r-intsvy) package to obtain the Mean and Standard Deviation of PV values from "PV1MATH" to "PV10MATH", "PV1READ" to "PV10READ" and "PV1SCIE" to "PV10SCIE" for each gender.

The code chunk to generate the composite PV values for Math, Reading and Science by gender is as follows:

```{r}
pvmathgenderonly <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"MATH"),c("ST004D01T"), data=stu_qqq_SG_clean,export=FALSE,name="pvmath_bygenderonly",folder=data_folder_path)

pvreadgenderonly <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"READ"),c("ST004D01T"), data=stu_qqq_SG_clean,export=FALSE,name="pvread_bygenderonly",folder=data_folder_path)

pvsciegenderonly <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"SCIE"),c("ST004D01T"), data=stu_qqq_SG_clean,export=FALSE,name="pvscie_bygenderonly",folder=data_folder_path)
```

We then generate the individual plots to display the distribution of Math, Reading and Science scores by gender:

::: panel-tabset
## Math {.unlisted}

```{r}
p5<- ggplot(pvmathgenderonly, aes(x = as.factor(ST004D01T), y = Mean,fill=ST004D01T)) +
  geom_boxplot(width = 0.5, position = position_dodge(width = 0.75),lwd=0.5,show.legend=FALSE) +
  stat_summary(
    fun = mean,
    geom = "point",
    shape = 18,
    size = 5,
    aes(colour=ST004D01T),
    position = position_dodge(width = 0.75)) +
  geom_errorbar(
    aes(ymin = Mean - SD, ymax = Mean + SD,color=ST004D01T),
    width = 0.5,
    size=0.8,
    position = position_dodge(width = 0.5)
  ) +
  labs(title = "Math Scores by Gender") +
  ylab("Math Score") +
  xlab("Gender")+
  scale_y_continuous(limits = c(0, 1000), breaks = seq(0, 1000, by = 100))+
  scale_fill_discrete(name = "Gender") +
  scale_color_discrete(name = "Gender") +
  coord_flip() +
  theme_gray()
```

## Reading {.unlisted}

```{r}
p6<- ggplot(pvreadgenderonly, aes(x = as.factor(ST004D01T), y = Mean,fill=ST004D01T)) +
  geom_boxplot(width = 0.5, position = position_dodge(width = 0.75),lwd=0.5,show.legend=FALSE) +
  stat_summary(
    fun = mean,
    geom = "point",
    shape = 18,
    size = 5,
    aes(colour=ST004D01T),
    position = position_dodge(width = 0.75)) +
  geom_errorbar(
    aes(ymin = Mean - SD, ymax = Mean + SD,color=ST004D01T),
    width = 0.5,
    size=0.8,
    position = position_dodge(width = 0.5)
  ) +
  labs(title = "Reading Scores by Gender") +
  ylab("Reading Score") +
  xlab("Gender")+
  scale_y_continuous(limits = c(0, 1000), breaks = seq(0, 1000, by = 100))+
  scale_fill_discrete(name = "Gender") +
  scale_color_discrete(name = "Gender") +
  coord_flip() +
  theme_gray()
```

## Science {.unlisted}

```{r}
p7<- ggplot(pvsciegenderonly, aes(x = as.factor(ST004D01T), y = Mean,fill=ST004D01T)) +
  geom_boxplot(width = 0.5, position = position_dodge(width = 0.75),lwd=0.5,show.legend=FALSE) +
  stat_summary(
    fun = mean,
    geom = "point",
    shape = 18,
    size = 5,
    aes(colour=ST004D01T),
    position = position_dodge(width = 0.75)) +
  geom_errorbar(
    aes(ymin = Mean - SD, ymax = Mean + SD,color=ST004D01T),
    width = 0.5,
    size=0.8,
    position = position_dodge(width = 0.5)
  ) +
  labs(title = "Science Scores by Gender") +
  ylab("Science Score") +
  xlab("Gender")+
  scale_y_continuous(limits = c(0, 1000), breaks = seq(0, 1000, by = 100))+
  scale_fill_discrete(name = "Gender") +
  scale_color_discrete(name = "Gender") +
  coord_flip() +
  theme_gray()
```
:::

We then plot all three plots together using patchwork() for better visualisation of the overall performance of schools:

```{r,fig.width=10, fig.height=15}
(p5/p6/p7)+plot_annotation(tag_levels = 'I')
```

While there is generally no large difference in overall performances between males and females across Math, Reading, and Science, males are observed to perform slightly better in Math and Science, whereas females are slightly stronger in Reading.

\[37 words\]

## 4.4 Distribution of students' performance in Math, Science and Reading by gender across schools {#sec-4.4}

We zoom in further to analyse if there are differences in performances in Math, Reading and Science between genders at a more granular level - within schools. As the above, we use the [pisa.mean.pv](https://www.rdocumentation.org/packages/intsvy/versions/2.8/topics/pisa.mean.pv) function from [intsvy](https://daniel-caro.com/r-intsvy) package to obtain the Mean and Standard Deviation of PV values from "PV1MATH" to "PV10MATH", "PV1READ" to "PV10READ" and "PV1SCIE" to "PV10SCIE" for each school and by gender.

The code chunk to generate the composite PV values is as follows:

```{r,fig.width=25, fig.height=40}
pvmathgender <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"MATH"),c("CNTSCHID","ST004D01T"), data=stu_qqq_SG_clean,export=FALSE,name="pvmath_bygender",folder=data_folder_path)

pvreadgender <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"READ"),c("CNTSCHID","ST004D01T"), data=stu_qqq_SG_clean,export=FALSE,name="pvread_bygender",folder=data_folder_path)

pvsciegender <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"SCIE"),by= c("CNTSCHID","ST004D01T"), data=stu_qqq_SG_clean,export=FALSE,name="pvscie_bygender",folder=data_folder_path)
```

We then generate individual plots to display the distribution of Math, Reading and Science scores across schools by gender.

The code chunks are as follows:

::: panel-tabset
## Math {.unlisted}

```{r,fig.width=20, fig.height=50}
p8<- ggplot(pvmathgender, aes(x = as.factor(CNTSCHID), y = Mean,fill=ST004D01T))+
  geom_boxplot(width = 0.5, position = position_dodge(width = 0.75),lwd=1.5,show.legend=FALSE) +
  stat_summary(
    fun = mean,
    geom = "point",
    shape = 18,
    size = 10,
    aes(colour=ST004D01T),
    position = position_dodge(width = 0.75)) +
  geom_errorbar(
    aes(ymin = Mean - SD, ymax = Mean + SD,color=ST004D01T),
    width = 1,
    size=2,
    position = position_dodge(width = 0.5)
  ) +
  labs(title = "Math Scores by Gender across Schools") +
  ylab("Math Score") +
  xlab("School ID")+
  scale_y_continuous(limits=c(0,1000),breaks = seq(0, 1000, by=200))+
  coord_flip() +
  theme_minimal(base_size=50)+
  theme(legend.position="none")
```

## Reading {.unlisted}

```{r,fig.width=20, fig.height=50}
p9<- ggplot(pvreadgender, aes(x = as.factor(CNTSCHID), y = Mean,fill=ST004D01T))+
  geom_boxplot(width = 0.5, position = position_dodge(width = 0.75),lwd=1.5) +
  stat_summary(
    fun = mean,
    geom = "point",
    shape = 18,
    size = 10,
    aes(colour=ST004D01T),
    position = position_dodge(width = 0.75)) +
  geom_errorbar(
    aes(ymin = Mean - SD, ymax = Mean + SD,color=ST004D01T),
    width = 1,
    size=2,
    position = position_dodge(width = 0.5)
  ) +
  labs(title = "Reading Scores by Gender across Schools") +
  ylab("Reading Score") +
  xlab("School ID")+
  scale_y_continuous(limits=c(0,1000),breaks = seq(0, 1000, by=200))+
  coord_flip() +
  theme_minimal(base_size=50)+
  theme(legend.position="none")
```

## Science {.unlisted}

```{r,fig.width=20, fig.height=50}
p10<- ggplot(pvsciegender, aes(x = as.factor(CNTSCHID), y = Mean,fill=ST004D01T))+
  geom_boxplot(width = 0.5, position = position_dodge(width = 0.75),lwd=1.5) +
  stat_summary(
    fun = mean,
    geom = "point",
    shape = 18,
    size = 10,
    aes(colour=ST004D01T),
    position = position_dodge(width = 0.75)) +
  geom_errorbar(
    aes(ymin = Mean - SD, ymax = Mean + SD,color=ST004D01T),
    width = 1,
    size=2,
    position = position_dodge(width = 0.5)
  ) +
  labs(title = "Science Scores by Gender across Schools") +
  ylab("Science Score") +
  xlab("School ID")+
  scale_y_continuous(limits=c(0,1000),breaks = seq(0, 1000, by=200))+
  scale_fill_discrete(name = "Gender", labels = c("1" = "Female", "2" = "Male"))+
  scale_color_discrete(name = "Gender", labels = c("1" = "Female", "2" = "Male")) +
  coord_flip() +
  theme_minimal(base_size=50)
```
:::

We then plot all three plots together using patchwork() for better visualisation of the overall performance by gender across schools:

```{r,fig.width=60, fig.height=100}
(p8|p9|p10)+plot_annotation(tag_levels = 'I')
```

Based on the plot above, at the school level, it is observed that there is generally no large differences between the performances of males and females in Math, Reading and Science. Students in the same school generally perform similarly, and this could be potentially attributed to students being exposed to the same school teaching environment and peer influence which could affect academic performance.

\[63 words\]

## 4.5 Distribution of Math, Reading and Science scores by socioeconomic status

We had earlier created a variable "ESCS_recoded" which categorises socioeconomic status into four quantiles - "Very Low", "Low", "Medium" and "High". As the above, we also use the [pisa.mean.pv](https://www.rdocumentation.org/packages/intsvy/versions/2.8/topics/pisa.mean.pv) function from [intsvy](https://daniel-caro.com/r-intsvy) package to obtain the Mean and Standard Deviation of PV values from "PV1MATH" to "PV10MATH", "PV1READ" to "PV10READ" and "PV1SCIE" to "PV10SCIE" by socioeconomic status.

The code chunk to generate the composite PV values for Math, Reading and Science by socioeconomic status is as follows:

```{r}
pvmathescs <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"MATH"),c("ESCS_recoded"), data=stu_qqq_SG_clean,export=FALSE,name="pvmathescs",folder=data_folder_path)

pvreadescs <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"READ"),c("ESCS_recoded"), data=stu_qqq_SG_clean,export=FALSE,name="pvreadescs",folder=data_folder_path)

pvscieescs <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"SCIE"),c("ESCS_recoded"), data=stu_qqq_SG_clean,export=FALSE,name="pvscieescs",folder=data_folder_path)
```

We then generate individual plots to display the distribution of Math, Reading and Science scores across schools by socioeconomic status.

The code chunks are as follows:

::: panel-tabset
## Math {.unlisted}

```{r}
p11<- ggplot(pvmathescs, aes(x = ESCS_recoded, y = Mean,fill=ESCS_recoded))+
  geom_boxplot(width = 0.5, position = position_dodge(width = 0.5),lwd=0.5,show.legend=FALSE) +
  stat_summary(
    fun = mean,
    geom = "point",
    shape = 10,
    size = 2,
    aes(colour=ESCS_recoded),
    position = position_dodge(width = 0.75)) +
  geom_errorbar(
    aes(ymin = Mean - SD, ymax = Mean + SD,color=ESCS_recoded),
    width = 0.5,
    size=1,
    position = position_dodge(width = 0.5)
  ) +
  labs(title = "Math Scores by Socioeconomic Status") +
  ylab("Math Score") +
  xlab("Socioeconomic Status")+
  scale_y_continuous(limits=c(0,1000),breaks = seq(0, 1000, by=200))+
  coord_flip() +
  theme_minimal(base_size=10)+
  theme(legend.position="none")
```

## Reading {.unlisted}

```{r}
p12<- ggplot(pvreadescs, aes(x = ESCS_recoded, y = Mean,fill=ESCS_recoded))+
  geom_boxplot(width = 0.5, position = position_dodge(width = 0.5),lwd=0.5,show.legend=FALSE) +
  stat_summary(
    fun = mean,
    geom = "point",
    shape = 10,
    size = 2,
    aes(colour=ESCS_recoded),
    position = position_dodge(width = 0.75)) +
  geom_errorbar(
    aes(ymin = Mean - SD, ymax = Mean + SD,color=ESCS_recoded),
    width = 0.5,
    size=1,
    position = position_dodge(width = 0.5)
  ) +
  labs(title = "Reading Scores by Socioeconomic Status") +
  ylab("Reading Score") +
  xlab("Socioeconomic Status")+
  scale_y_continuous(limits=c(0,1000),breaks = seq(0, 1000, by=200))+
  coord_flip() +
  theme_minimal(base_size=10)+
  theme(legend.position="none")
```

## Science {.unlisted}

```{r}
p13<- ggplot(pvscieescs, aes(x = ESCS_recoded, y = Mean,fill=ESCS_recoded))+
  geom_boxplot(width = 0.5, position = position_dodge(width = 0.5),lwd=0.5,show.legend=FALSE) +
  stat_summary(
    fun = mean,
    geom = "point",
    shape = 10,
    size = 2,
    aes(colour=ESCS_recoded),
    position = position_dodge(width = 0.75)) +
  geom_errorbar(
    aes(ymin = Mean - SD, ymax = Mean + SD,color=ESCS_recoded),
    width = 0.5,
    size=1,
    position = position_dodge(width = 0.5)
  ) +
  labs(title = "Science Scores by Socioeconomic Status") +
  ylab("Science Score") +
  xlab("Socioeconomic Status")+
  scale_y_continuous(limits=c(0,1000),breaks = seq(0, 1000, by=200))+
  coord_flip() +
  theme_minimal(base_size=10)
```
:::

We then plot all three plots together using patchwork() for better visualisation of the overall performance by gender across socioeconomic statuses:

```{r,fig.width=8,fig.height=10}
(p11/p12/p13)+plot_annotation(tag_levels = 'I')
```

Based on the plot above, it is observed that students with higher socioeconomic statuses perform better than peers with lower socioeconomic statuses in all three segments of Math, Reading and Science. A lower socioeconomic status may mean less access to financial resources and fewer educational opportunities which could have brought about the differences observed above. Further analysis will need to be carried out to determine the significance of this difference.

\[70 words\]

# \[Added\] Exploratory Data Analysis

Based on Prof Kam's advise to utilise [ggdist](https://cran.r-project.org/web/packages/ggdist/ggdist.pdf) and [ggridges](https://cran.r-project.org/web/packages/ggridges/ggridges.pdf) for EDA, a separate set of EDA will be conducted in this section.

As the [intsvy](https://daniel-caro.com/r-intsvy) package utilised for the original EDA section above is strictly tailored for the analysis of data from international assessment studies such as PISA, it adheres strictly to the guidelines provided by OECD that [plausible values should not be averaged at the student level as the level of measurement error at the individual level may be large](https://www.oecd.org/pisa/data/httpoecdorgpisadatabase-instructions.htm) and does not allow for the calculatation of mean PV values for each student ID.

In order to facilitate visual analytics and explore potential trends beyond this limitation, this section will calculate the average plausible values at the student level.

::: callout-caution
Please note that given the limitations of the OECD guidelines for international assessment studies, the results should be interpreted with caution, and the methodology is documented transparently to ensure awareness of the departure from established guidelines.
:::

## Generating a new column with mean PV values for each subject at student level

We will generate mean PV values at the student level for Math, Reading and Science and include them as new columns within the "stu_qqq_SG_clean" dataset.

The code chunks are as follows:

::: panel-tabset
## Math {.unlisted}

```{r}
stu_qqq_SG_clean <- mutate(stu_qqq_SG_clean, pvmathmean_col = rowMeans(select(stu_qqq_SG_clean,c("PV1MATH","PV2MATH","PV3MATH","PV4MATH","PV5MATH","PV6MATH","PV7MATH","PV8MATH","PV9MATH","PV10MATH")), na.rm = TRUE)) 
```

## Reading {.unlisted}

```{r}
stu_qqq_SG_clean <- mutate(stu_qqq_SG_clean, pvreadmean_col = rowMeans(select(stu_qqq_SG_clean,c("PV1READ","PV2READ","PV3READ","PV4READ","PV5READ","PV6READ","PV7READ","PV8READ","PV9READ","PV10READ")), na.rm = TRUE)) 
```

## Science {.unlisted}

```{r}
stu_qqq_SG_clean <- mutate(stu_qqq_SG_clean, pvsciemean_col = rowMeans(select(stu_qqq_SG_clean,c("PV1SCIE","PV2SCIE","PV3SCIE","PV4SCIE","PV5SCIE","PV6SCIE","PV7SCIE","PV8SCIE","PV9SCIE","PV10SCIE")), na.rm = TRUE))
```
:::

## Distribution of PV values of students across schools

### Generating a ridgeline plot using mean PV values for each student

We will generate individual ridgeline plots using mean PV values for each student and study the distribution of student performance across different schools.

The code chunks are as follows:

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
## Ridgeline plot for Maths

::: panel-tabset
## Math {.unlisted}
```{r,fig.width=20,fig.height=250,echo=FALSE}
p14 <- ggplot(stu_qqq_SG_clean,
       aes(x = pvmathmean_col, 
           y = CNTSCHID, 
           fill = 0.5 - abs(0.5-stat(ecdf)))) +
  stat_density_ridges(geom = "density_ridges_gradient", 
                      calc_ecdf = TRUE) +
  scale_fill_viridis_c(name = "Tail probability",
                       direction = -1) +
  theme_ridges()+
  theme(text = element_text(size = 35),axis.title = element_text(size = 30),axis.text=element_text(size=30),legend.key.size = unit(2, 'cm'),plot.title = element_text(size = 30))+
  ylab("School ID")+
  xlab("Math Scores")+
  ggtitle("Distribution of Math Scores of students for each school")
p14
```
## The Code {.unlisted}

```{r}
#| eval: false
p14 <- ggplot(stu_qqq_SG_clean,
       aes(x = pvmathmean_col, 
           y = CNTSCHID, 
           fill = 0.5 - abs(0.5-stat(ecdf)))) +
  stat_density_ridges(geom = "density_ridges_gradient", 
                      calc_ecdf = TRUE) +
  scale_fill_viridis_c(name = "Tail probability",
                       direction = -1) +
  theme_ridges()+
  theme(text = element_text(size = 35),axis.title = element_text(size = 30),axis.text=element_text(size=30),legend.key.size = unit(2, 'cm'),plot.title = element_text(size = 30))+
  ylab("School ID")+
  xlab("Math Scores")+
  ggtitle("Distribution of Math Scores of students for each school")
```
:::
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
## Ridgeline plot for Reading

::: panel-tabset
## Reading {.unlisted}

```{r,fig.width=20,fig.height=250,echo=FALSE}
p15 <- ggplot(stu_qqq_SG_clean,
       aes(x = pvreadmean_col, 
           y = CNTSCHID, 
           fill = 0.5 - abs(0.5-stat(ecdf)))) +
  stat_density_ridges(geom = "density_ridges_gradient", 
                      calc_ecdf = TRUE) +
  scale_fill_viridis_c(name = "Tail probability",
                       direction = -1) +
  theme_ridges()+
  theme(text = element_text(size = 35),axis.title = element_text(size = 30),axis.text=element_text(size=30),legend.key.size = unit(2, 'cm'),plot.title = element_text(size = 30))+
  ylab("School ID")+
  xlab("Reading Scores")+
  ggtitle("Distribution of Reading Scores of students for each school")
p15
```

## The Code {.unlisted}
```{r,fig.width=20,fig.height=250}
#| eval: false
p15 <- ggplot(stu_qqq_SG_clean,
       aes(x = pvreadmean_col, 
           y = CNTSCHID, 
           fill = 0.5 - abs(0.5-stat(ecdf)))) +
  stat_density_ridges(geom = "density_ridges_gradient", 
                      calc_ecdf = TRUE) +
  scale_fill_viridis_c(name = "Tail probability",
                       direction = -1) +
  theme_ridges()+
  theme(text = element_text(size = 35),axis.title = element_text(size = 30),axis.text=element_text(size=30),legend.key.size = unit(2, 'cm'),plot.title = element_text(size = 30))+
  xlim(0,1000)+
  ylab("School ID")+
  xlab("Reading Scores")+
  ggtitle("Distribution of Reading Scores of students for each school")
```
:::
:::

::: {.callout-note collapse="true" appearance="minimal" icon="false"}
## Ridgeline plot for Science

::: panel-tabset
## Science {.unlisted}
```{r,fig.width=20,fig.height=250,echo=FALSE}
p16 <- ggplot(stu_qqq_SG_clean,
       aes(x = pvsciemean_col, 
           y = CNTSCHID, 
           fill = 0.5 - abs(0.5-stat(ecdf)))) +
  stat_density_ridges(geom = "density_ridges_gradient", 
                      calc_ecdf = TRUE) +
  scale_fill_viridis_c(name = "Tail probability",
                       direction = -1) +
  theme_ridges()+
  theme(text = element_text(size = 35),axis.title = element_text(size = 30),axis.text=element_text(size=30),legend.key.size = unit(2, 'cm'),plot.title = element_text(size = 30))+
  xlim(0,1000)+
  ylab("School ID")+
  xlab("Science Scores")+
  ggtitle("Distribution of Science Scores of students for each school")
p16
```
## The Code {.unlisted}

```{r,fig.width=20,fig.height=250}
#| eval: false
p16 <- ggplot(stu_qqq_SG_clean,
       aes(x = pvsciemean_col, 
           y = CNTSCHID, 
           fill = 0.5 - abs(0.5-stat(ecdf)))) +
  stat_density_ridges(geom = "density_ridges_gradient", 
                      calc_ecdf = TRUE) +
  scale_fill_viridis_c(name = "Tail probability",
                       direction = -1) +
  theme_ridges()+
  theme(text = element_text(size = 35),axis.title = element_text(size = 30),axis.text=element_text(size=30),legend.key.size = unit(2, 'cm'),plot.title = element_text(size = 30))+
  xlim(0,1000)+
  ylab("School ID")+
  xlab("Science Scores")+
  ggtitle("Distribution of Science Scores of students for each school")
```
:::
:::

The plots offer more in-depth visualisation as compared to the EDA in [Section 4.2](#sec-4.2) as we are able to understand the density of the PV scores within schools.

The plots indicate the central tendency of scores within each school. Schools mostly have flatter plots for Math and Science which suggest a more diverse range of scores and plots with higher peaks for Reading. This could be aligned with the nature of the subjects. The universal nature of reading skills, which students often apply across different subjects could have resulted in less variability as compared to Math and Science.

\[98 words\]

## Distribution of PV values of students by gender

### Generating a raincloud plot for distribution of scores by gender

We will generate individual raincloud plots using mean PV values for each student and study the distribution of student performance by gender.

The code chunks are as follows:

::: panel-tabset
## Math {.unlisted}

```{r,echo=FALSE}
p17 <- ggplot(stu_qqq_SG_clean, 
       aes(x = ST004D01T, 
           y = pvmathmean_col)) +
  stat_halfeye(adjust = 0.8,
               width = 0.3,
               justification = -0.2,
               .width = 0,
               point_colour = NA,
               position = "dodge",
               scale=0.9) +
  geom_boxplot(width = .1,
               outlier.shape = NA,
               position= position_nudge(x=-0.1)) +
  stat_dots(side = "left", 
            justification = 1.2, 
            binwidth = .5,
            dotsize = 10) +
  ylab("Math Score")+
  xlab("Gender")+
  coord_flip() +
  theme_economist()+
  ggtitle("Distribution of Math Scores by gender")
p17
```

## The Code {.unlisted}
```{r}
#|eval=FALSE
p17 <- ggplot(stu_qqq_SG_clean, 
       aes(x = ST004D01T, 
           y = pvmathmean_col)) +
  stat_halfeye(adjust = 0.8,
               width = 0.3,
               justification = -0.2,
               .width = 0,
               point_colour = NA,
               position = "dodge",
               scale=0.9) +
  geom_boxplot(width = .1,
               outlier.shape = NA,
               position= position_nudge(x=-0.1)) +
  stat_dots(side = "left", 
            justification = 1.2, 
            binwidth = .5,
            dotsize = 10) +
  ylab("Math Score")+
  xlab("Gender")+
  coord_flip() +
  theme_economist()+
  ggtitle("Distribution of Math Scores by gender")
```
:::

::: panel-tabset
## Reading {.unlisted}
```{r,echo=FALSE}
p18 <- ggplot(stu_qqq_SG_clean, 
       aes(x = ST004D01T, 
           y = pvreadmean_col)) +
  stat_halfeye(adjust = 0.8,
               width = 0.3,
               justification = -0.2,
               .width = 0,
               point_colour = NA,
               position = "dodge",
               scale=0.9) +
  geom_boxplot(width = .1,
               outlier.shape = NA,
               position= position_nudge(x=-0.1)) +
  stat_dots(side = "left", 
            justification = 1.2, 
            binwidth = .5,
            dotsize = 10) +
  ylab("Reading Score")+
  xlab("Gender")+
  coord_flip() +
  theme_economist()+
  ggtitle("Distribution of Reading Scores by gender")
p18
```

## The Code {.unlisted}

```{r}
#|eval=FALSE
p18 <- ggplot(stu_qqq_SG_clean, 
       aes(x = ST004D01T, 
           y = pvreadmean_col)) +
  stat_halfeye(adjust = 0.8,
               width = 0.3,
               justification = -0.2,
               .width = 0,
               point_colour = NA,
               position = "dodge",
               scale=0.9) +
  geom_boxplot(width = .1,
               outlier.shape = NA,
               position= position_nudge(x=-0.1)) +
  stat_dots(side = "left", 
            justification = 1.2, 
            binwidth = .5,
            dotsize = 10) +
  ylab("Reading Score")+
  xlab("Gender")+
  coord_flip() +
  theme_economist()+
  ggtitle("Distribution of Reading Scores by gender")
```
:::

::: panel-tabset
## Science {.unlisted}
```{r,echo=FALSE}
p19 <- ggplot(stu_qqq_SG_clean, 
       aes(x = ST004D01T, 
           y = pvsciemean_col)) +
  stat_halfeye(adjust = 0.8,
               width = 0.3,
               justification = -0.2,
               .width = 0,
               point_colour = NA,
               position = "dodge",
               scale=0.9) +
  geom_boxplot(width = .1,
               outlier.shape = NA,
               position= position_nudge(x=-0.1)) +
  stat_dots(side = "left", 
            justification = 1.2, 
            binwidth = .5,
            dotsize = 10) +
  ylab("Science Score")+
  xlab("Gender")+
  coord_flip() +
  theme_economist()+
  ggtitle("Distribution of Science Scores by gender")
p19
```

## The Code {.unlisted}
```{r}
#|eval=FALSE
p19 <- ggplot(stu_qqq_SG_clean, 
       aes(x = ST004D01T, 
           y = pvsciemean_col)) +
  stat_halfeye(adjust = 0.8,
               width = 0.3,
               justification = -0.2,
               .width = 0,
               point_colour = NA,
               position = "dodge",
               scale=0.9) +
  geom_boxplot(width = .1,
               outlier.shape = NA,
               position= position_nudge(x=-0.1)) +
  stat_dots(side = "left", 
            justification = 1.2, 
            binwidth = .5,
            dotsize = 10) +
  ylab("Science Score")+
  xlab("Gender")+
  coord_flip() +
  theme_economist()+
  ggtitle("Distribution of Science Scores by gender")
```
:::

As mentioned in [Section 4.3](#sec-4.3) above, there are generally no large differences between the performances of males and females in Math, Reading and Science. Based on the plots above, males perform slightly better in Math and Science while females perform better in Reading.

\[43 words\]

# References

-   [PISA 2022 Database](https://www.oecd.org/pisa/data/2022database/)

-   [Examples with PISA 2022](https://img1.wsimg.com/blobby/go/105aeb78-8212-40bb-855d-a52ee90a5f89/downloads/pisa22.pdf?ver=1705429874371)

-   [intsvy: An R Package for Analyzing International Large-Scale Assessment Data](https://www.jstatsoft.org/article/download/v081i07/1163)

-   [Using 'intsvy' to analyze international assessment data](https://cbokhove.files.wordpress.com/2015/03/r-workshop-aea-conference-part-3_-using-intsvy-to-analyse-international-assessment-data.pdf)

-   [R 'intsvy'](https://daniel-caro.com/r-intsvy)

-   [Visualizing Distributions with Raincloud Plots (and How to Create Them with ggplot2)](https://www.cedricscherer.com/2021/06/06/visualizing-distributions-with-raincloud-plots-and-how-to-create-them-with-ggplot2)
