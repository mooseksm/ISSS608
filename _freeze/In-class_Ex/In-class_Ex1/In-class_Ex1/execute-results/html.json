{
  "hash": "5e49afe0e4f147eca9f6e98a8e3d4b1e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 1: Now You See It!\"\ndate: \"January 13, 2024\"\ndate-modified: \"last-modified\"\ntoc: true\nexecute:\n  eval: true\n  echo: true\n  freeze: true\n  warning: false\n  message: false\neditor: visual\n---\n\n\n## Loading R packages\n\nIn this hands-on exercise, two R packages will be used. They are:\n\n-   [tidyverse](https://www.tidyverse.org/); and\n-   [haven](https://haven.tidyverse.org/)\n\nThe code chunk used is as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, haven)\n```\n:::\n\n\nWriting code chunks in this way allows entire code to be run section by section, and hence easier to control. Should one write code in python, we can replace {r} with {p}.\n\nReason for writing with pacman:: in front is to launch/call the package before writing the syntax.\n\n## Importing PISA data\n\nThe code chunk below uses [`read_sas()`](https://haven.tidyverse.org/reference/read_sas.html) of [haven](https://haven.tidyverse.org/) to import PISA data into R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstu_qqq <- \n  read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n```\n:::\n\n\n### Filtering data to obtain SG data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstu_qqq_SG <- stu_qqq %>%\n  filter(CNT == \"SGP\")\n```\n:::\n\n\nIndicate a \\$ to call out the CNT variable in stu_qqq dataset thereafter remove it before running the code.\n\n### Saving the filtered data as a new file\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n```\n:::\n\n\nAlways remember to indicate the extension i.e. \".rds\" when saving the file.\n\n### Calling the file to check if it has been saved correctly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstu_qqq_SG <- \n  read_rds(\"data/stu_qqq_SG.rds\")\n```\n:::\n\n\nTo test, one can clear the environment and rerun the code to see if the data \"stu_qqq_SG\" appears.\n\nTo avoid active code when loading the website, one can indicate \"#\\| eval: false\" within the r code chunk.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}