---
title: "Hands-on Exercise 2"
date: January 13, 2024
date-modified: "last-modified"
toc: true
toc-title: Contents
execute:
  eval: true
  echo: true
  freeze: true
  warning: false
  message: false
---

# **Beyond ggplot2 fundamentals**

# Getting Started

## Installing and loading the required libraries

In this hands-on exercise 2, four R packages in addition to [tidyverse](https://www.tidyverse.org/) will be used. They are:

-   ggrepel: provides geoms for ggplot2 to repel overlapping text labels
-   ggthemes: provides extra themes, geoms and scales for ggplot2
-   hrbrthemes: provides typography-centric themes and theme components for ggplot2
-   patchwork: for the preparation of a composite figure created using ggplot2

The code chunk below will be used to check if these packages have been installed and to also load them into my working R environment:

```{r}
pacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse)
```

## Importing data

For this hands-on exercise, the data file *Exam_data* will be used. It consists of year end examination grades of a cohort of primary 3 students from a local school. It is in csv file format.

The code chunk below imports *exam_data.csv* into the R environment by using [*read_csv()*](https://readr.tidyverse.org/reference/read_delim.html) function of [**readr**](https://readr.tidyverse.org/) package. readr is one of the tidyverse packages.

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

There are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data type and the other three are in continuous data type.

Taking a look at the head of the exam_data below:

```{r}
head(exam_data,10)
```

-   the categorical data types are: ID, CLASS, GENDER, RACE

-   the continuous data types are: ENGLISH, MATHS, SCIENCE

# Beyond ggplot2 annotation: ggrepel

One of the challenge in plotting statistical graph is annotation, especially with a large number of data points.

::: panel-tabset
## The plot {.unlisted}

```{r, echo=FALSE}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label(aes(label = ID), 
             hjust = .5, 
             vjust = -.5) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

## The code

```{r}
#| eval: false

ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label(aes(label = ID), 
             hjust = .5, 
             vjust = -.5) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```
:::

[**ggrepel**](https://ggrepel.slowkow.com/) is an extension of **ggplot2** package which provides `geoms` for **ggplot2** to repel overlapping text as in the example above.

This is done by replacing `geom_text()` with [`geom_text_repel()`](https://ggrepel.slowkow.com/reference/geom_text_repel.html) and`geom_label()`with [`geom_label_repel`](https://ggrepel.slowkow.com/reference/geom_text_repel.html).

## Working with ggrepel

::: panel-tabset
## The plot {.unlisted}

```{r, echo=FALSE}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

## The code

```{r}
#| eval: false

ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label_repel(aes(label = ID),
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```
:::

# Beyond ggplot2 themes

ggplot2 comes with eight [built-in themes](https://ggplot2.tidyverse.org/reference/ggtheme.html) which are: `theme_gray()`, `theme_bw()`, `theme_classic()`, `theme_dark()`, `theme_light()`, `theme_linedraw()`, `theme_minimal()` and `theme_void()`.

::: panel-tabset
## The plot {.unlisted}

```{r, echo=FALSE}
ggplot(data=exam_data,
       aes(x= MATHS)) +
  geom_histogram(bins=20,
                 boundary=100,
                 color="grey25",
                 fill="cadetblue2") +  
  theme_gray() +
  ggtitle("English scores versus Maths scores for Primary 3")
```

## The code

```{r}
#| eval: false

ggplot(data=exam_data,
       aes(x= MATHS)) +
  geom_histogram(bins=20,
                 boundary=100,
                 color="grey25",
                 fill="cadetblue2") +  
  theme_gray() +
  ggtitle("English scores versus Maths scores for Primary 3")
```
:::

Refer to this [link](https://ggplot2.tidyverse.org/reference/#themes) to learn more about ggplot2 themes.

### Working with ggtheme package

[**ggthemes**](https://cran.r-project.org/web/packages/ggthemes/)[ ](https://www.wsj.com/)provides [‘ggplot2’ themes](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/) that replicate the look of plots by Edward Tufte, Stephen Few, [Fivethirtyeight](https://abcnews.go.com/538), [The Economist](https://www.economist.com), ‘Stata’, ‘Excel’, and [The Wall Street Journal](https://www.wsj.com/), among others.

In the example below, The Economist theme is used.

::: panel-tabset
### The plot {.unlisted}

```{r, echo=FALSE}
ggplot(data=exam_data,
       aes(x=MATHS)) +
  geom_histogram(bins=20,
                 boundary=100,
                 color="grey25",
                 fill="darkseagreen2")+
  ggtitle("Distribution of Maths scores") +
  theme_economist()
```

### The code

```{r}
#| eval: false
ggplot(data=exam_data,
       aes(x=MATHS)) +
  geom_histogram(bins=20,
                 boundary=100,
                 color="grey25",
                 fill="darkseagreen2")+
  ggtitle("Distribution of Maths scores") +
  theme_economist()
```
:::

It also provides some extra geoms and scales for ‘ggplot2’. This [website](https://rdrr.io/cran/ggthemes/man/theme_economist.html) explains further.

### Working with hrbrthemes package

[hrbrthemes](https://cinc.rud.is/web/packages/hrbrthemes/) package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.

::: panel-tabset
### The plot {.unlisted}

```{r, echo=FALSE}
ggplot(data=exam_data,
       aes(x=MATHS)) +
  geom_histogram(bins=20,
                 boundary=100,
                 color="grey25",
                 fill="aquamarine2")+
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()
```

### The code

```{r}
#| eval: false
ggplot(data=exam_data,
       aes(x=MATHS)) +
  geom_histogram(bins=20,
                 boundary=100,
                 color="grey25",
                 fill="aquamarine2")+
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()
```
:::

The second goal centers around productivity for a production workflow. In fact, this “production workflow” is the context for where the elements of hrbrthemes should be used. Consult this [vignette](https://cran.r-project.org/web/packages/hrbrthemes/vignettes/why_hrbrthemes.html) to learn more.

::: panel-tabset
### The plot {.unlisted}

```{r, echo=FALSE}
ggplot(data=exam_data,
       aes(x=MATHS)) +
  geom_histogram(bins=20,
                 boundary=100,
                 color="grey25",
                 fill="skyblue1")+
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18,
              base_size=15,
              grid="Y")
```

### The code

```{r}
#| eval: false
ggplot(data=exam_data,
       aes(x=MATHS)) +
  geom_histogram(bins=20,
                 boundary=100,
                 color="grey25",
                 fill="skyblue1")+
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18,
              base_size=15,
              grid="Y")
```
:::

+-------------------------------------------------------------------------------------------+
| What can we learn from the code chunk above?                                              |
+===========================================================================================+
| -   `axis_title_size` argument is used to increase the font size of the axis title to 18, |
|                                                                                           |
| -   `base_size` argument is used to increase the default axis label to 15, and            |
|                                                                                           |
| -   `grid` argument is used to remove the x-axis grid lines.                              |
+-------------------------------------------------------------------------------------------+

# Beyond Single Graph

It is not unusual that multiple graphs are required to tell a compelling visual story. There are several ggplot2 extensions provide functions to compose figure with multiple graphs. In this section, we will create a composite plot by combining multiple graphs. First, we will create three statistical graphics by using the code chunk below.

::: panel-tabset
### The plot {.unlisted}

```{r, echo=FALSE}
p1 <- ggplot(data=exam_data,
             aes(x=MATHS))+
  geom_histogram(bins=20,
                 boundary=100,
                 color="grey25",
                 fill="slategray2")+
  coord_cartesian(xlim=c(0,100))+
  ggtitle("Distribution of Maths scores")+
  theme(text = element_text(size = 10))
p1
```

### The code

```{r}
#| eval: false
p1 <- ggplot(data=exam_data,
             aes(x=MATHS))+
  geom_histogram(bins=20,
                 boundary=100,
                 color="grey25",
                 fill="slategray2")+
  coord_cartesian(xlim=c(0,100))+
  ggtitle("Distribution of Maths scores")+
  theme(text = element_text(size = 10))
```
:::

Next plot

::: panel-tabset
### The plot {.unlisted}

```{r, echo=FALSE}
p2 <- ggplot(data=exam_data,
             aes(x=ENGLISH))+
  geom_histogram(bins=20,
                 boundary=100,
                 color="grey25",
                 fill="seashell")+
  coord_cartesian(xlim=c(0,100))+
  ggtitle("Distribution of English scores")+
  theme(text = element_text(size = 10))
p2
```

### The code

```{r}
#| eval: false
p2 <- ggplot(data=exam_data,
             aes(x=ENGLISH))+
  geom_histogram(bins=20,
                 boundary=100,
                 color="grey25",
                 fill="seashell")+
  coord_cartesian(xlim=c(0,100))+
  ggtitle("Distribution of English scores")+
  theme(text = element_text(size = 10))
```
:::

Lastly, we will draw a scatterplot for English scores versus Maths scores, as shown below:

::: panel-tabset
### The plot {.unlisted}

```{r, echo=FALSE}
p3 <- ggplot(data=exam_data,
             aes(x=MATHS,
                 y=ENGLISH))+
  geom_point()+
  geom_smooth(method=lm,
              size=0.5)+
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100))+
  ggtitle("English scores versus Maths scores for Primary 3")+
  theme(text = element_text(size = 10))
p3
```

### The code

```{r}
#| eval: false
p3 <- ggplot(data=exam_data,
             aes(x=MATHS,
                 y=ENGLISH))+
  geom_point()+
  geom_smooth(method=lm,
              size=0.5)+
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100))+
  ggtitle("English scores versus Maths scores for Primary 3")+
  theme(text = element_text(size = 10))
```
:::

### Creating Composite Graphics: pathwork methods

There are several ggplot2 extension functions that support the preparation of the composite figure by combining several graphs such as [`grid.arrange()`](https://cran.r-project.org/web/packages/gridExtra/vignettes/arrangeGrob.html) of **gridExtra** package and [`plot_grid()`](https://wilkelab.org/cowplot/reference/plot_grid.html) of [**cowplot**](https://wilkelab.org/cowplot/) package. In this section, we will utilise a ggplot2 extension called [**patchwork**](https://patchwork.data-imaginist.com/) which is specially designed for combining separate ggplot2 graphs into a single figure.

Patchwork package has a very simple syntax where layouts can be created easily. The general syntax comprises:

-   Two-Column Layout using the Plus Sign +.

-   Parenthesis () to create a subplot group.

-   Two-Row Layout using the Division Sign `/`

### Combining two ggplot2 graphs

The figure in the tabset below shows a composite of two histograms created using patchwork.

::: panel-tabset
### The plot {.unlisted}

```{r, echo=FALSE}
p1+p2
```

### The code

```{r}
#| eval: false
p1+p2
```
:::

### Combining three ggplot2 graphs

We are able to plot more complex composite figures by using the appropriate operators. For instance, the composite figure below is plotted by using:

-   “\|” operator places ggplot2 graphs in a row,

-   “/” operator stacks ggplot2 graphs into columns,

-   “()” operator allows the sequence of plotting to be defined.

::: panel-tabset
### The plot {.unlisted}

```{r,fig.width=9, echo=FALSE}
(p1/p2)|p3
```

### The code

```{r,fig.width=9}
#| eval: false
(p1/p2)|p3
```
:::

This website, [Plot Assembly](https://patchwork.data-imaginist.com/articles/guides/assembly.html), provides more details.

### Creating a composite figure with tag

**patchwork** also provides auto-tagging capabilities to identify subplots in text format. An example is shown in the figure below.

::: panel-tabset
### The plot {.unlisted}

```{r,fig.width=9, echo=FALSE}
((p1/p2)|p3) +
  plot_annotation(tag_levels = 'I')
```

### The code

```{r,fig.width=9}
#| eval: false
((p1/p2)|p3) +
  plot_annotation(tag_levels = 'I')
```
:::

### Creating a figure with an insert

Beside providing functions to place plots next to each other based on the provided layout. The [`inset_element()`](https://patchwork.data-imaginist.com/reference/inset_element.html) function of **patchwork** allows the placement of one or several plots or graphic elements freely on top or below another plot. An example is shown below.

::: panel-tabset
### The plot {.unlisted}

```{r, echo=FALSE}
p3 + inset_element(p2,
                    left=0.02,
                    bottom=0.7,
                    right=0.5,
                    top=1)
```

### The code

```{r}
#| eval: false
p3 + inset_element(p2,
                    left=0.02,
                    bottom=0.7,
                    right=0.5,
                    top=1)
```
:::

### Creating a composite figure by using patchwork and ggtheme

The figure below is created using a combination of patchwork and theme_economist() of ggthemes discussed above.

::: panel-tabset
### The plot {.unlisted}

```{r,fig.width=15}
patchwork <- (p1/p2)|p3
patchwork & theme_economist()
```

### The code

```{r,fig.width=15}
#| eval: false
patchwork <- (p1/p2)|p3
patchwork & theme_economist()
```
:::

# References

-   [Patchwork R package goes nerd viral](https://www.littlemissdata.com/blog/patchwork)

-   [ggrepel](https://ggrepel.slowkow.com/)

-   [ggthemes](https://ggplot2.tidyverse.org/reference/ggtheme.html)

-   [hrbrthemes](https://cinc.rud.is/web/packages/hrbrthemes/)

-   [ggplot tips: Arranging plots](https://albert-rapp.de/post/2021-10-28-extend-plot-variety/)

-   [ggplot2 Theme Elements Demonstration](https://henrywang.nl/ggplot2-theme-elements-demonstration/)

-   [ggplot2 Theme Elements Reference Sheet](https://isabella-b.com/blog/ggplot2-theme-elements-reference/)
